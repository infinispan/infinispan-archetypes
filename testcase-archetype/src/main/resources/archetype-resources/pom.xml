<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>${groupId}</groupId>
   <artifactId>${artifactId}</artifactId>
   <packaging>jar</packaging>
   <version>${version}</version>
   <name>A sample test case for Infinispan</name>
   <url>http://www.myorganization.org</url>


   <properties>
      <!--
         Which Infinispan version do you want to use?  Released versions are always more reliable than snapshots!
      -->
      <version.infinispan>8.1.0.Final</version.infinispan>


      <!-- the default JGroups protocol stack to use -->
      <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
      <!-- the default transaction manager to use -->
      <infinispan.test.jta.tm>dummytm</infinispan.test.jta.tm>

      <!-- Versions of dependencies -->
       <version.commons.logging>1.2</version.commons.logging>
       <version.easymock>3.2</version.easymock>
       <version.easymockclassext>3.2</version.easymockclassext>
       <version.jbossjta>5.0.4.Final</version.jbossjta>
       <version.log4j>1.2.17</version.log4j>
       <version.testng>6.8.8</version.testng>
       <version.xstream>1.4.8</version.xstream>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-core</artifactId>
         <version>${version.infinispan}</version>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-core</artifactId>
         <version>${version.infinispan}</version>
         <scope>test</scope>
         <type>test-jar</type>
      </dependency>

      <!-- Other test dependencies -->
      <dependency>
         <groupId>org.testng</groupId>
         <artifactId>testng</artifactId>
         <version>${version.testng}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.easymock</groupId>
         <artifactId>easymockclassextension</artifactId>
         <version>${version.easymockclassext}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.easymock</groupId>
         <artifactId>easymock</artifactId>
         <version>${version.easymock}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.narayana.jta</groupId>
         <artifactId>narayana-jta</artifactId>
         <version>${version.jbossjta}</version>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <artifactId>commons-httpclient</artifactId>
               <groupId>commons-httpclient</groupId>
            </exclusion>
            <exclusion>
               <artifactId>ironjacamar-spec-api</artifactId>
               <groupId>org.jboss.ironjacamar</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jbogging-spi</artifactId>
               <groupId>org.jboss.logging</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-logging</artifactId>
               <groupId>org.jboss.logging</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-logging-processor</artifactId>
               <groupId>org.jboss.logging</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-logging-generator</artifactId>
               <groupId>org.jboss.logging</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jbossws-native-core</artifactId>
               <groupId>org.jboss.ws.native</groupId>
            </exclusion>
            <exclusion>
               <artifactId>emma</artifactId>
               <groupId>emma</groupId>
            </exclusion>
            <exclusion>
               <artifactId>emma_ant</artifactId>
               <groupId>emma</groupId>
            </exclusion>
            <exclusion>
               <artifactId>hornetq-core</artifactId>
               <groupId>org.hornetq</groupId>
            </exclusion>
            <exclusion>
               <artifactId>netty</artifactId>
               <groupId>io.netty</groupId>
            </exclusion>
            <exclusion>
               <artifactId>wrapper</artifactId>
               <groupId>tanukisoft</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jacorb</artifactId>
               <groupId>jacorb</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jfreechart</artifactId>
               <groupId>jfree</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-corba-ots-spi</artifactId>
               <groupId>org.jboss.integration</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-server-manager</artifactId>
               <groupId>org.jboss.jbossas</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-ejb-api_3.1_spec</artifactId>
               <groupId>org.jboss.spec.javax.ejb</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jnp-client</artifactId>
               <groupId>org.jboss.naming</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-servlet-api_3.0_spec</artifactId>
               <groupId>org.jboss.spec.javax.servlet</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jbossws-common</artifactId>
               <groupId>org.jboss.ws</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jcl-over-slf4j</artifactId>
               <groupId>org.slf4j</groupId>
            </exclusion>
            <exclusion>
               <artifactId>stax-api</artifactId>
               <groupId>stax</groupId>
            </exclusion>
            <exclusion>
               <artifactId>idl</artifactId>
               <groupId>jacorb</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-logging-tools</artifactId>
               <groupId>org.jboss.logging</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-connector-api_1.5_spec</artifactId>
               <groupId>org.jboss.spec.javax.resource</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-remoting</artifactId>
               <groupId>org.jboss.remoting</groupId>
            </exclusion>
            <exclusion>
               <artifactId>slf4j-api</artifactId>
               <groupId>org.slf4j</groupId>
            </exclusion>
            <exclusion>
               <artifactId>dom4j</artifactId>
               <groupId>dom4j</groupId>
            </exclusion>
            <exclusion>
               <artifactId>commons-codec</artifactId>
               <groupId>commons-codec</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-logmanager</artifactId>
               <groupId>org.jboss.logmanager</groupId>
            </exclusion>
            <exclusion>
               <artifactId>hibernate-jpa-2.0-api</artifactId>
               <groupId>org.hibernate.javax.persistence</groupId>
            </exclusion>
            <exclusion>
               <artifactId>commons-logging</artifactId>
               <groupId>commons-logging</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jcommon</artifactId>
               <groupId>jfree</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-transaction-api_1.1_spec</artifactId>
               <groupId>org.jboss.spec.javax.transaction</groupId>
            </exclusion>
            <exclusion>
               <artifactId>byteman</artifactId>
               <groupId>org.jboss.byteman</groupId>
            </exclusion>
            <exclusion>
               <artifactId>byteman-submit</artifactId>
               <groupId>org.jboss.byteman</groupId>
            </exclusion>
         </exclusions>
      </dependency>

      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <version>${version.commons.logging}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
         <version>${version.log4j}</version>
         <optional>true</optional>
      </dependency>

      <!-- used to serialize non-serializable objects for a dummy marshaller -->
      <dependency>
         <groupId>com.thoughtworks.xstream</groupId>
         <artifactId>xstream</artifactId>
         <version>${version.xstream}</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <!-- enforce java 1.8 and maven 3.0.0 -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>1.3.1</version>
            <executions>
               <execution>
                  <id>enforce-java</id>
                  <goals>
                     <goal>enforce</goal>
                  </goals>
                  <configuration>
                     <rules>
                        <requireJavaVersion>
                           <version>[1.8,)</version>
                        </requireJavaVersion>
                        <requireMavenVersion>
                           <version>[3.0.0,)</version>
                        </requireMavenVersion>
                     </rules>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <!-- by default, compile to JDK 1.8 compatibility -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.1</version>
            <configuration>
               <source>1.8</source>
               <target>1.8</target>
               <encoding>UTF-8</encoding>
            </configuration>
         </plugin>

         <!-- test runner settings -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <forkMode>none</forkMode>
               <systemProperties>
                  <property>
                     <name>infinispan.test.jgroups.protocol</name>
                     <value>${infinispan.test.jgroups.protocol}</value>
                  </property>
                  <property>
                     <name>bind.address</name>
                     <value>127.0.0.1</value>
                  </property>
                  <property>
                     <name>java.net.preferIPv4Stack</name>
                     <value>true</value>
                  </property>
                  <property>
                     <name>infinispan.test.jta.tm</name>
                     <value>${infinispan.test.jta.tm}</value>
                  </property>
                  <property>
                     <name>log4j.configuration</name>
                     <value>test-log4j.xml</value>
                  </property>
               </systemProperties>
               <trimStackTrace>false</trimStackTrace>
               <properties>
                  <property>
                     <name>listener</name>
                     <value>org.infinispan.test.fwk.DebuggingUnitTestNGListener</value>
                  </property>
               </properties>
            </configuration>
         </plugin>

      </plugins>
   </build>

   <repositories>
      <repository>
         <id>JBoss.org Public Repository</id>
         <releases>
            <enabled>true</enabled>
         </releases>
         <snapshots>
            <enabled>true</enabled>
         </snapshots>
         <url>http://repository.jboss.org/nexus/content/groups/public/</url>
      </repository>
   </repositories>

   <profiles>
      <profile>
         <!-- This profile forces the use of the JBoss Transaction Manager rather than the test DummyTransactionManager  -->
         <id>jbosstm</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <infinispan.test.jta.tm>jbosstm</infinispan.test.jta.tm>
         </properties>
      </profile>

      <profile>
         <!-- Uses a TCP configuration for the transport  -->
         <id>tcp</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>

      <profile>
         <!-- Uses a UDP configuration for the transport  -->
         <id>udp</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <infinispan.test.jgroups.protocol>udp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
   </profiles>
</project>
